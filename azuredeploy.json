{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ServersvNetName": {
      "type": "string",
      "defaultValue": "ServersvNet",
      "metadata": {
        "description": "virtual network name"
      }
    },
    "GatewayvNetName": {
      "type": "string",
      "defaultValue": "GatewayvNet",
      "metadata": {
        "description": "Gateway virtual network name"
      }
    },
    "HubvNetName": {
      "type": "string",
      "defaultValue": "HubvNet",
      "metadata": {
        "description": "Hub virtual network name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    }
  },
  "variables": {
    "ServersvNet": {
      "AddressPrefix": "10.0.0.0/21",
      "Subnet01Prefix": "10.0.0.0/24",
      "Subnet02Prefix": "10.0.2.0/24",
      "Subnet01Name": "Subnet01",
      "Subnet02Name": "Subnet02"
    },
    "hubvNet": {
      "AddressPrefix": "10.0.8.0/26",
      "azureFirewallSubnetPrefix": "10.0.8.0/26",
      "azureFirewallSubnetName": "AzureFirewallSubnet"
    },
    "GWvNet": {
      "AddressPrefix": "10.0.8.64/28",
      "GatewaySubnetName": "GatewaySubnet",
      "GatewaySubnetPrefix": "10.0.8.64/28"
    },
    "HubtovNetPeeringName": "HubtovNetPeering",
    "GWtoHubPeeringName": "GWtoHubPeering",
    "HubtoGWPeeringName": "HubtoGWPeering",
    "GWtovNetPeeringName": "GWtovNetPeering",
    "nextHopIP": "10.0.8.4",
    "ServersRouteTableName": "ServersRouteTable",
    "azfwRouteTableName": "azfwRouteTable",
    "AzureFirewallPublicIPName": "AzureFirewallPublicIP",
    "gatewayPublicIPName": "gatewayPublicIP",
    "GatewaySubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('GatewayvNetName'), variables('GWvNet').GatewaySubnetName)]",
    "gatewayName": "vpnGateway",
    "gatewaySku": "Basic",
    "vpnType": "RouteBased"
  },
  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('ServersRouteTableName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "disableBgpRoutePropagation": true,
        "routes": [
          {
            "name": "AzfwCustomTraffic",
            "properties": {
              "addressPrefix": "10.2.4.0/24",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('nextHopIP')]"
            }
          },
          {
            "name": "AzurePaaS01",
            "properties": {
              "addressPrefix": "13.70.64.0/18",
              "nextHopType": "Internet"
            }
          },
          {
            "name": "AzurePaaS02",
            "properties": {
              "addressPrefix": "13.72.224.0/19",
              "nextHopType": "Internet"
            }
          },
          {
            "name": "AzurePaaS03",
            "properties": {
              "addressPrefix": "13.73.192.0/20",
              "nextHopType": "Internet"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('azfwRouteTableName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "disableBgpRoutePropagation": true,
        "routes": [
          {
            "name": "AzfwInternetAccess",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "Internet"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('GatewayvNetName')]",
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[parameters('GatewayvNetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('GWvNet').AddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('GWvNet').GatewaySubnetName]",
            "properties": {
              "addressPrefix": "[variables('GWvNet').GatewaySubnetPrefix]"
            }
          }
        ]
      },
      "resources": [
        {
          "name": "[variables('GWtoHubPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('HubvNetName'))]"
            },
            "peeringState": "Connected"
          }
        },
        {
          "name": "[variables('GWtovNetPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('ServersvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": true,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('ServersvNetName'))]"
            },
            "peeringState": "Connected"
          }
        }
      ]
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('GatewaySubnetId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[variables('gatewaySku')]",
          "tier": "[variables('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "[variables('vpnType')]",
        "enableBgp": "false"
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
    },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('AzureFirewallPublicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[concat('pip', uniqueString(resourceGroup().name))]"
        }
      }
    }
  ],
  "outputs": {
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/publicIPAddresses', variables('AzureFirewallPublicIPName'))]"
    }
  }
}